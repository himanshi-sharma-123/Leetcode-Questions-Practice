Approach 1 : BRUTE FORCE O(N^2)

        int n = nums.length;
        int arr[] = new int[2];
        for(int i=0;i<n;i++){
            for(int j=i+1;j<=n-1;j++){
                if(nums[i]+nums[j]==target){
                    arr[0] = i;
                    arr[1] = j;
                }
            }
        }

        return arr;

Approach 2 : USING HASHMAPS O(N)

          HashMap<Integer,Integer> map = new HashMap<>();
          int ans[] = new int[2];
          for(int i=0;i<nums.length;i++){
              if(map.containsKey(target-nums[i])){
                   ans[1] = i;
                   ans[0] = map.get(target-nums[i]);
                   return ans;
              }
                        map.put(nums[i],i);

          }

          return ans;

Explanation: For example: arr = [2,7,11,15] target = 9

For i=0 : 9-2 = 7 is not present in the map; map= [2->1]
For i=1 : 9-7 = 2 present in map = ans[] = [0 , 1]
